import React from 'react';
import { BarChart3 } from 'lucide-react';
import KPICard from './KPICard';
import { formatDays, classifyStandardDeviation } from '@/utils/kpiFormatters';

interface StandardDeviationCardProps {
  standardDeviation: number;
  averageProduction: number;
  lastUpdated: Date;
  isCalculating?: boolean;
  calculationId?: string;
  processingTime?: number;
  cacheHit?: boolean;
  calculationVersion?: string;
}

const StandardDeviationCard: React.FC<StandardDeviationCardProps> = ({
  standardDeviation,
  averageProduction,
  lastUpdated,
  isCalculating = false,
  calculationId,
  processingTime,
  cacheHit = false,
  calculationVersion
}) => {
  const classification = classifyStandardDeviation(standardDeviation, averageProduction);
  
  const getCardStatus = (classification: string) => {
    switch (classification) {
      case 'Baixa variaÃ§Ã£o':
        return 'success' as const;
      case 'VariaÃ§Ã£o moderada':
        return 'warning' as const;
      case 'Alta variaÃ§Ã£o':
        return 'error' as const;
      default:
        return 'neutral' as const;
    }
  };

  const getDescription = (classification: string, stdDev: number) => {
    const baseText = `Desvio padrÃ£o de ${formatDays(stdDev)} indica ${classification.toLowerCase()}.`;
    
    switch (classification) {
      case 'Baixa variaÃ§Ã£o':
        return `${baseText} Excelente consistÃªncia na duraÃ§Ã£o das tarefas.`;
      case 'VariaÃ§Ã£o moderada':
        return `${baseText} Algumas tarefas variam significativamente em duraÃ§Ã£o.`;
      case 'Alta variaÃ§Ã£o':
        return `${baseText} Grande inconsistÃªncia - revisar estimativas e processos.`;
      default:
        return baseText;
    }
  };

  const getVariationEmoji = (classification: string) => {
    switch (classification) {
      case 'Baixa variaÃ§Ã£o':
        return 'ðŸ“Š';
      case 'VariaÃ§Ã£o moderada':
        return 'ðŸ“ˆ';
      case 'Alta variaÃ§Ã£o':
        return 'ðŸ“‰';
      default:
        return 'ðŸ“Š';
    }
  };

  return (
    <KPICard
      title="Desvio PadrÃ£o"
      value={`${getVariationEmoji(classification)} ${formatDays(standardDeviation)}`}
      status={getCardStatus(classification)}
      subtitle={classification}
      icon={BarChart3}
      description={getDescription(classification, standardDeviation)}
      tooltipTitle="Desvio PadrÃ£o das DuraÃ§Ãµes"
      tooltipDescription="Mede a variabilidade na duraÃ§Ã£o das tarefas. Valores baixos indicam maior previsibilidade no cronograma."
      tooltipDetails={[
        "ðŸ“Š Baixa variaÃ§Ã£o (< 20% da mÃ©dia): Cronograma previsÃ­vel",
        "ðŸ“ˆ VariaÃ§Ã£o moderada (20-50% da mÃ©dia): Algumas inconsistÃªncias",
        "ðŸ“‰ Alta variaÃ§Ã£o (> 50% da mÃ©dia): Cronograma imprevisÃ­vel",
        "Calculado apenas com tarefas concluÃ­das",
        "Outliers sÃ£o removidos para maior precisÃ£o",
        "Ãštil para identificar problemas de estimativa"
      ]}
      tooltipCalculation="Ïƒ = âˆš(Î£(xi - Î¼)Â² / n) onde xi = duraÃ§Ã£o, Î¼ = mÃ©dia"
      lastUpdated={lastUpdated}
      isCalculating={isCalculating}
      calculationId={calculationId}
      processingTime={processingTime}
      cacheHit={cacheHit}
      calculationVersion={calculationVersion}
    />
  );
};

export default StandardDeviationCard;